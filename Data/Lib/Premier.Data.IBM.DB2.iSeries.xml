<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EntLibContrib.Data.IBM.DB2.iSeries</name>
    </assembly>
    <members>
        <member name="T:EntLibContrib.Data.IBM.DB2.iSeries.Configuration.Db2ConnectionData">
            <summary>
            
            </summary>
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Configuration.Db2ConnectionData.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:EntLibContrib.Data.IBM.DB2.iSeries.Configuration.Db2ConnectionData.Name">
            <summary>
            
            </summary>
        </member>
        <member name="T:EntLibContrib.Data.IBM.DB2.iSeries.Configuration.Db2ConnectionSettings">
            <summary>
            Db2-specific configuration section.
            </summary>
        </member>
        <member name="F:EntLibContrib.Data.IBM.DB2.iSeries.Configuration.Db2ConnectionSettings.SectionName">
            <summary>
            The section name for the <see cref="T:EntLibContrib.Data.IBM.DB2.iSeries.Configuration.Db2ConnectionSettings"/>.
            </summary>
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Configuration.Db2ConnectionSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EntLibContrib.Data.IBM.DB2.iSeries.Configuration.Db2ConnectionSettings"/> class with default values.
            </summary>
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Configuration.Db2ConnectionSettings.GetSettings(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource)">
            <summary>
            Retrieves the <see cref="T:EntLibContrib.Data.IBM.DB2.iSeries.Configuration.Db2ConnectionSettings"/> from the configuration source.
            </summary>
            <param name="configurationSource">The configuration source to retrieve the configuration from.</param>
            <returns>The configuration section, or <see langword="null"/> (<b>Nothing</b> in Visual Basic) 
            if not present in the configuration source.</returns>
        </member>
        <member name="P:EntLibContrib.Data.IBM.DB2.iSeries.Configuration.Db2ConnectionSettings.Db2ConnectionsData">
            <summary>
            Collection of IBM-specific connection information.
            </summary>
        </member>
        <member name="T:EntLibContrib.Data.IBM.DB2.iSeries.Configuration.Db2DatabaseData">
            <summary>
            Describes a <see cref="T:EntLibContrib.Data.IBM.DB2.iSeries.Db2Database"/> instance, aggregating information from a 
            <see cref="T:System.Configuration.ConnectionStringSettings"/> and any Ibm-specific database information.
            </summary>
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Configuration.Db2DatabaseData.#ctor(System.Configuration.ConnectionStringSettings,System.Func{System.String,System.Configuration.ConfigurationSection})">
            <summary>
             Initializes a new instance of the <see cref="T:EntLibContrib.Data.IBM.DB2.iSeries.Configuration.Db2DatabaseData"/> class with a connection string and a configuration
             source.
            </summary>
            <param name="connectionStringSettings">The <see cref="T:System.Configuration.ConnectionStringSettings"/> for the represented database.</param>
            <param name="configurationSource">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource"/> from which Ibm-specific information 
             should be retrieved.</param>
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Configuration.Db2DatabaseData.BuildDatabase">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:EntLibContrib.Data.IBM.DB2.iSeries.Configuration.DesignResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:EntLibContrib.Data.IBM.DB2.iSeries.Configuration.DesignResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:EntLibContrib.Data.IBM.DB2.iSeries.Configuration.DesignResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:EntLibContrib.Data.IBM.DB2.iSeries.Configuration.DesignResources.Db2ConnectionDataDescription">
            <summary>
              Looks up a localized string similar to A connection to an Db2 database..
            </summary>
        </member>
        <member name="P:EntLibContrib.Data.IBM.DB2.iSeries.Configuration.DesignResources.Db2ConnectionDataDisplayName">
            <summary>
              Looks up a localized string similar to Db2 Connection.
            </summary>
        </member>
        <member name="P:EntLibContrib.Data.IBM.DB2.iSeries.Configuration.DesignResources.Db2ConnectionDataNameDescription">
            <summary>
              Looks up a localized string similar to The name of the Db2 Connection..
            </summary>
        </member>
        <member name="P:EntLibContrib.Data.IBM.DB2.iSeries.Configuration.DesignResources.Db2ConnectionDataNameDisplayName">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:EntLibContrib.Data.IBM.DB2.iSeries.Configuration.DesignResources.Db2ConnectionSettingsDb2ConnectionsDataDescription">
            <summary>
              Looks up a localized string similar to Connections to Db2 databases..
            </summary>
        </member>
        <member name="P:EntLibContrib.Data.IBM.DB2.iSeries.Configuration.DesignResources.Db2ConnectionSettingsDb2ConnectionsDataDisplayName">
            <summary>
              Looks up a localized string similar to Db2 Connections.
            </summary>
        </member>
        <member name="P:EntLibContrib.Data.IBM.DB2.iSeries.Configuration.DesignResources.Db2ConnectionSettingsDescription">
            <summary>
              Looks up a localized string similar to Settings specific to Db2 connections.
            </summary>
        </member>
        <member name="P:EntLibContrib.Data.IBM.DB2.iSeries.Configuration.DesignResources.Db2ConnectionSettingsDisplayName">
            <summary>
              Looks up a localized string similar to Db2 Connection Settings.
            </summary>
        </member>
        <member name="T:EntLibContrib.Data.IBM.DB2.iSeries.Db2Database">
            <summary>
            <para>Represents a Db2 iSeries Server database.</para>
            </summary>
            <remarks> 
            <para>
            Internally uses DB2 .Net Provider(IBM.Data.DB2.iSeries) to connect to the database.
            </para>  
            </remarks>
        </member>
        <member name="F:EntLibContrib.Data.IBM.DB2.iSeries.Db2Database.Instance">
            <summary>
            The iDB2Factory instance.
            </summary>
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Db2Database.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:EntLibContrib.Data.IBM.DB2.iSeries.Db2Database"/> class with a connection string.
            </summary>
            <param name="connectionString">The connection string.</param>
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Db2Database.AddParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
            <summary>
            <para>Adds a new instance of a <see cref="T:System.Data.Common.DbParameter"/> object to the command.</para>
            </summary>
            <param name="command">The command to add the parameter.</param>
            <param name="name"><para>The name of the parameter.</para></param>
            <param name="dbType"><para>One of the <see cref="T:System.Data.DbType"/> values.</para></param>
            <param name="size"><para>The maximum size of the data within the column.</para></param>
            <param name="direction"><para>One of the <see cref="T:System.Data.ParameterDirection"/> values.</para></param>
            <param name="nullable"><para>A value indicating whether the parameter accepts <see langword="null"/> (<b>Nothing</b> in Visual Basic) values.</para></param>
            <param name="precision"><para>The maximum number of digits used to represent the <paramref name="value"/>.</para></param>
            <param name="scale"><para>The number of decimal places to which <paramref name="value"/> is resolved.</para></param>
            <param name="sourceColumn"><para>The name of the source column mapped to the DataSet and used for loading or returning the <paramref name="value"/>.</para></param>
            <param name="sourceVersion"><para>One of the <see cref="T:System.Data.DataRowVersion"/> values.</para></param>
            <param name="value"><para>The value of the parameter.</para></param>    
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Db2Database.AddParameter(System.Data.Common.DbCommand,System.String,IBM.Data.DB2.iSeries.iDB2DbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
            <summary>
            <para>Adds a new instance of an <see cref="T:IBM.Data.DB2.iSeries.iDB2Parameter"/> object to the command.</para>
            </summary>
            <param name="command">The <see cref="T:IBM.Data.DB2.iSeries.iDB2Command"/> to add the parameter.</param>
            <param name="name"><para>The name of the parameter.</para></param>
            <param name="idb2Type"><para>One of the <see cref="T:IBM.Data.DB2.iSeries.iDB2DbType"/> values.</para></param>
            <param name="size"><para>The maximum size of the data within the column.</para></param>
            <param name="direction"><para>One of the <see cref="T:System.Data.ParameterDirection"/> values.</para></param>
            <param name="nullable"><para>A value indicating whether the parameter accepts <see langword="null"/> (<b>Nothing</b> in Visual Basic) values.</para></param>
            <param name="precision"><para>The maximum number of digits used to represent the <paramref name="value"/>.</para></param>
            <param name="scale"><para>The number of decimal places to which <paramref name="value"/> is resolved.</para></param>
            <param name="sourceColumn"><para>The name of the source column mapped to the DataSet and used for loading or returning the <paramref name="value"/>.</para></param>
            <param name="sourceVersion"><para>One of the <see cref="T:System.Data.DataRowVersion"/> values.</para></param>
            <param name="value"><para>The value of the parameter.</para></param>      
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Db2Database.AssignParameters(System.Data.Common.DbCommand,System.Object[])">
            <summary>
            <para>Discovers parameters on the <paramref name="command"/> and assigns the values from <paramref name="parameterValues"/> to the <paramref name="command"/>s Parameters list.</para>
            </summary>
            <param name="command">The command the parameeter values will be assigned to</param>
            <param name="parameterValues">The parameter values that will be assigned to the command.</param>
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Db2Database.CreateWrappedReader(Microsoft.Practices.EnterpriseLibrary.Data.DatabaseConnectionWrapper,System.Data.IDataReader)">
            <summary>
            All data readers get wrapped in objects so that they properly manage connections.
            Some derived Database classes will need to create a different wrapper, so this
            method is provided so that they can do this.
            </summary>
            <param name="connection">Connection + refcount.</param>
            <param name="innerReader">The reader to wrap.</param>
            <returns>The new reader.</returns>
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Db2Database.SetUpRowUpdatedEvent(System.Data.Common.DbDataAdapter)">
            <summary>
            Sets the RowUpdated event for the data adapter.
            </summary>
            <param name="adapter">The <see cref="T:System.Data.Common.DbDataAdapter"/> to set the event.</param>
            <remarks>The <see cref="T:System.Data.Common.DbDataAdapter"/> must be an <see cref="T:IBM.Data.DB2.iSeries.iDB2DataAdapter"/>.</remarks>
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Db2Database.GetParameterValue(System.Data.Common.DbCommand,System.String)">
            <summary>
            Gets a parameter value.
            </summary>
            <param name="command">The command that contains the parameter.</param>
            <param name="parameterName">The name of the parameter.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Db2Database.SetParameterValue(System.Data.Common.DbCommand,System.String,System.Object)">
            <summary>
            Sets a parameter value.
            </summary>
            <param name="command">The command with the parameter.</param>
            <param name="parameterName">The parameter name.</param>
            <param name="value">The parameter value.</param>
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Db2Database.ConvertGuidToByteArray(System.Object)">
            <summary>
            Converts a GUID object to a byte array or DBNull if null.
            </summary>
            <remarks>This is specifically used in the conversion of a Guid to iDB2Binary</remarks>
            <param name="value">The Guid value.</param>
            <returns>byte array or DBNull</returns>
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Db2Database.ConvertByteArrayToGuid(System.Object)">
            <summary>
            Converts a byte array object to GUID.
            </summary>
            <remarks>This is specifically used in the conversion of iDB2Binary back to Guid</remarks>
            <param name="value">The value.</param>
            <returns>Guid object or DBNull</returns>
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Db2Database.OnIBMRowUpdated(System.Object,IBM.Data.DB2.iSeries.iDB2RowUpdatedEventArgs)">
            <devdoc>
            Listens for the RowUpdate event on a data adapter to support UpdateBehavior.Continue
            </devdoc>
        </member>
        <member name="P:EntLibContrib.Data.IBM.DB2.iSeries.Db2Database.SupportsParemeterDiscovery">
            <summary>
            Does this <see cref='T:Microsoft.Practices.EnterpriseLibrary.Data.Database'/> object support parameter discovery?
            </summary>
            <value>true.</value>
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Db2Database.DeriveParameters(System.Data.Common.DbCommand)">
            <summary>
            Retrieves parameter information from the stored procedure specified in the <see cref="T:System.Data.Common.DbCommand"/> and populates the Parameters collection of the specified <see cref="T:System.Data.Common.DbCommand"/> object. 
            </summary>
            <param name="discoveryCommand">The <see cref="T:System.Data.Common.DbCommand"/> to do the discovery.</param>
            <remarks>The <see cref="T:System.Data.Common.DbCommand"/> must be a <see cref="T:System.Data.Common.DbCommand"/> instance.</remarks>
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Db2Database.GetStoredProcCommand(System.String,System.Object[])">
            <summary>
            <para>Creates a <see cref="T:System.Data.Common.DbCommand"/> for a stored procedure.</para>
            </summary>
            <param name="storedProcedureName"><para>The name of the stored procedure.</para></param>
            <param name="parameterValues"><para>The list of parameters for the procedure.</para></param>
            <returns><para>The <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure.</para></returns>
            <remarks>
            <para>The parameters for the stored procedure will be discovered and the values are assigned in positional order.</para>
            </remarks>        
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Db2Database.UserParametersStartIndex">
            <summary>
            Returns the starting index for parameters in a command.
            </summary>
            <returns>The starting index for parameters in a command.</returns>
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Db2Database.BuildParameterName(System.String)">
            <summary>
            Builds a value parameter name for the current database.
            </summary>
            <param name="name">The name of the parameter.</param>
            <returns>A correctly formated parameter name.</returns>
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Db2Database.SameNumberOfParametersAndValues(System.Data.Common.DbCommand,System.Object[])">
            <summary>
            Determines if the number of parameters in the command matches the array of parameter values.
            </summary>
            <param name="command">The <see cref="T:System.Data.Common.DbCommand"/> containing the parameters.</param>
            <param name="values">The array of parameter values.</param>
            <returns><see langword="true"/> if the number of parameters and values match; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Db2Database.ExecuteDb2SprocAccessor``1(System.String,System.Object[])">
            <summary>
            Executes a stored procedure and returns the result as an enumerable of <typeparamref name="TResult"/>.
            The conversion from <see cref="T:System.Data.IDataRecord"/> to <typeparamref name="TResult"/> will be done for each property based on matching property name to column name.
            </summary>
            <typeparam name="TResult">The element type that will be returned when executing.</typeparam>
            <param name="procedureName">The name of the stored procedure that will be executed.</param>
            <param name="parameterValues">Parameter values passsed to the stored procedure.</param>
            <returns>An enumerable of <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Db2Database.ExecuteDb2SprocAccessor``1(System.String,Microsoft.Practices.EnterpriseLibrary.Data.IParameterMapper,System.Object[])">
            <summary>
            Executes a stored procedure and returns the result as an enumerable of <typeparamref name="TResult"/>.
            The conversion from <see cref="T:System.Data.IDataRecord"/> to <typeparamref name="TResult"/> will be done for each property based on matching property name to column name.
            </summary>
            <typeparam name="TResult">The element type that will be returned when executing.</typeparam>
            <param name="procedureName">The name of the stored procedure that will be executed.</param>
            <param name="parameterMapper">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.IParameterMapper"/> that will be used to interpret the parameters passed to the Execute method.</param>
            <param name="parameterValues">Parameter values passsed to the stored procedure.</param>
            <returns>An enumerable of <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Db2Database.ExecuteDb2SprocAccessor``1(System.String,Microsoft.Practices.EnterpriseLibrary.Data.IRowMapper{``0},System.Object[])">
            <summary>
            Executes a stored procedure and returns the result as an enumerable of <typeparamref name="TResult"/>.
            </summary>
            <typeparam name="TResult">The element type that will be returned when executing.</typeparam>
            <param name="procedureName">The name of the stored procedure that will be executed.</param>
            <param name="rowMapper">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.IRowMapper`1"/> that will be used to convert the returned data to clr type <typeparamref name="TResult"/>.</param>
            <param name="parameterValues">Parameter values passsed to the stored procedure.</param>
            <returns>An enumerable of <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Db2Database.ExecuteDb2SprocAccessor``1(System.String,Microsoft.Practices.EnterpriseLibrary.Data.IParameterMapper,Microsoft.Practices.EnterpriseLibrary.Data.IRowMapper{``0},System.Object[])">
            <summary>
            Executes a stored procedure and returns the result as an enumerable of <typeparamref name="TResult"/>.
            </summary>
            <typeparam name="TResult">The element type that will be returned when executing.</typeparam>
            <param name="procedureName">The name of the stored procedure that will be executed.</param>
            <param name="parameterMapper">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.IParameterMapper"/> that will be used to interpret the parameters passed to the Execute method.</param>
            <param name="rowMapper">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.IRowMapper`1"/> that will be used to convert the returned data to clr type <typeparamref name="TResult"/>.</param>
            <param name="parameterValues">Parameter values passsed to the stored procedure.</param>
            <returns>An enumerable of <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Db2Database.ExecuteDb2SprocAccessor``1(System.String,Microsoft.Practices.EnterpriseLibrary.Data.IResultSetMapper{``0},System.Object[])">
            <summary>
            Executes a stored procedure and returns the result as an enumerable of <typeparamref name="TResult"/>.
            </summary>
            <typeparam name="TResult">The element type that will be returned when executing.</typeparam>
            <param name="procedureName">The name of the stored procedure that will be executed.</param>
            <param name="resultSetMapper">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.IResultSetMapper`1"/> that will be used to convert the returned set to an enumerable of clr type <typeparamref name="TResult"/>.</param>
            <param name="parameterValues">Parameter values passsed to the stored procedure.</param>
            <returns>An enumerable of <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Db2Database.ExecuteDb2SprocAccessor``1(System.String,Microsoft.Practices.EnterpriseLibrary.Data.IParameterMapper,Microsoft.Practices.EnterpriseLibrary.Data.IResultSetMapper{``0},System.Object[])">
            <summary>
            Executes a stored procedure and returns the result as an enumerable of <typeparamref name="TResult"/>.
            </summary>
            <typeparam name="TResult">The element type that will be returned when executing.</typeparam>
            <param name="procedureName">The name of the stored procedure that will be executed.</param>
            <param name="parameterMapper">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.IParameterMapper"/> that will be used to interpret the parameters passed to the Execute method.</param>
            <param name="resultSetMapper">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.IResultSetMapper`1"/> that will be used to convert the returned set to an enumerable of clr type <typeparamref name="TResult"/>.</param>
            <param name="parameterValues">Parameter values passsed to the stored procedure.</param>
            <returns>An enumerable of <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Db2Database.CreateDb2SprocAccessor``1(System.String)">
            <summary>
            Creates a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.SprocAccessor`1"/> for the given stored procedure.
            The conversion from <see cref="T:System.Data.IDataRecord"/> to <typeparamref name="TResult"/> will be done for each property based on matching property name to column name.
            </summary>
            <typeparam name="TResult">The type the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.SprocAccessor`1"/> should return when executing.</typeparam>
            <param name="procedureName">The name of the stored procedure that should be executed by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.SprocAccessor`1"/>. </param>
            <returns>A new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.SprocAccessor`1"/>.</returns>
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Db2Database.CreateDb2SprocAccessor``1(System.String,Microsoft.Practices.EnterpriseLibrary.Data.IParameterMapper)">
            <summary>
            Creates a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.SprocAccessor`1"/> for the given stored procedure.
            The conversion from <see cref="T:System.Data.IDataRecord"/> to <typeparamref name="TResult"/> will be done for each property based on matching property name to column name.
            </summary>
            <typeparam name="TResult">The type the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.SprocAccessor`1"/> should return when executing.</typeparam>
            <param name="parameterMapper">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.IParameterMapper"/> that will be used to interpret the parameters passed to the Execute method.</param>
            <param name="procedureName">The name of the stored procedure that should be executed by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.SprocAccessor`1"/>. </param>
            <returns>A new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.SprocAccessor`1"/>.</returns>
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Db2Database.CreateDb2SprocAccessor``1(System.String,Microsoft.Practices.EnterpriseLibrary.Data.IRowMapper{``0})">
            <summary>
            Creates a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.SprocAccessor`1"/> for the given stored procedure.
            </summary>
            <typeparam name="TResult">The type the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.SprocAccessor`1"/> should return when executing.</typeparam>
            <param name="rowMapper">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.IRowMapper`1"/> that will be used to convert the returned data to clr type <typeparamref name="TResult"/>.</param>
            <param name="procedureName">The name of the stored procedure that should be executed by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.SprocAccessor`1"/>. </param>
            <returns>A new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.SprocAccessor`1"/>.</returns>
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Db2Database.CreateDb2SprocAccessor``1(System.String,Microsoft.Practices.EnterpriseLibrary.Data.IParameterMapper,Microsoft.Practices.EnterpriseLibrary.Data.IRowMapper{``0})">
            <summary>
            Creates a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.SprocAccessor`1"/> for the given stored procedure.
            </summary>
            <typeparam name="TResult">The type the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.SprocAccessor`1"/> should return when executing.</typeparam>
            <param name="rowMapper">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.IRowMapper`1"/> that will be used to convert the returned data to clr type <typeparamref name="TResult"/>.</param>
            <param name="procedureName">The name of the stored procedure that should be executed by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.SprocAccessor`1"/>. </param>
            <param name="parameterMapper">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.IParameterMapper"/> that will be used to interpret the parameters passed to the Execute method.</param>
            <returns>A new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.SprocAccessor`1"/>.</returns>
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Db2Database.CreateDb2SprocAccessor``1(System.String,Microsoft.Practices.EnterpriseLibrary.Data.IResultSetMapper{``0})">
            <summary>
            Creates a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.SprocAccessor`1"/> for the given stored procedure.
            </summary>
            <typeparam name="TResult">The type the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.SprocAccessor`1"/> should return when executing.</typeparam>
            <param name="resultSetMapper">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.IResultSetMapper`1"/> that will be used to convert the returned set to an enumerable of clr type <typeparamref name="TResult"/>.</param>
            <param name="procedureName">The name of the stored procedure that should be executed by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.SprocAccessor`1"/>. </param>
            <returns>A new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.SprocAccessor`1"/>.</returns>
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Db2Database.CreateDb2SprocAccessor``1(System.String,Microsoft.Practices.EnterpriseLibrary.Data.IParameterMapper,Microsoft.Practices.EnterpriseLibrary.Data.IResultSetMapper{``0})">
            <summary>
            Creates a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.SprocAccessor`1"/> for the given stored procedure.
            </summary>
            <typeparam name="TResult">The type the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.SprocAccessor`1"/> should return when executing.</typeparam>
            <param name="resultSetMapper">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.IResultSetMapper`1"/> that will be used to convert the returned set to an enumerable of clr type <typeparamref name="TResult"/>.</param>
            <param name="procedureName">The name of the stored procedure that should be executed by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.SprocAccessor`1"/>. </param>
            <param name="parameterMapper">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.IParameterMapper"/> that will be used to interpret the parameters passed to the Execute method.</param>
            <returns>A new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.SprocAccessor`1"/>.</returns>
        </member>
        <member name="T:EntLibContrib.Data.IBM.DB2.iSeries.ParameterTypeRegistry">
            <summary>
            Holds in memory a collection of commands with corresponding parameter names and types
            </summary>
        </member>
        <member name="T:EntLibContrib.Data.IBM.DB2.iSeries.Db2DataReaderWrapper">
            <summary>
            
            </summary>
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Db2DataReaderWrapper.#ctor(IBM.Data.DB2.iSeries.iDB2DataReader)">
            <summary>
            
            </summary>
            <param name="innerReader"></param>
        </member>
        <member name="P:EntLibContrib.Data.IBM.DB2.iSeries.Db2DataReaderWrapper.InnerReader">
            <summary>
            Gets the wrapped <see cref="T:IBM.Data.DB2.iSeries.iDB2DataReader"/>.
            </summary>
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Db2DataReaderWrapper.GetGuid(System.Int32)">
            <summary>
            Gets the value of the specified field converted to a GUID.
            </summary>
            <param name="index">The index of the field to find.</param>
            <returns>The GUID of the specified field.</returns>
            <remarks>
            This method will cast the result data Guid data type. In iDB2 you must use that as Raw(16) so
            that this method can convert that to Guid properly.
            </remarks>        
        </member>
        <member name="T:EntLibContrib.Data.IBM.DB2.iSeries.RefCountingDb2DataReaderWrapper">
            <summary>
            Another wrapper for <see cref="T:IBM.Data.DB2.iSeries.iDB2DataReader"/> that adds connection
            reference counting.
            </summary>
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.RefCountingDb2DataReaderWrapper.Close">
            <summary>
            Closes the <see cref="T:System.Data.IDataReader"/> Object.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.RefCountingDb2DataReaderWrapper.Dispose(System.Boolean)">
            <summary>
            Close the contained data reader when disposing and releases the connection
            if it's not used anymore.
            </summary>
            <param name="disposing">True if called from Dispose method, false if called from finalizer. Since
            this class doesn't have a finalizer, this will always be true.</param>
        </member>
        <member name="T:EntLibContrib.Data.IBM.DB2.iSeries.Db2SprocAccessor`1">
            <summary>
            Represents a stored procedure call to the database that will return an enumerable of <typeparamref name="TResult"/>.
            </summary>
            <typeparam name="TResult">The element type that will be used to consume the result set.</typeparam>
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Db2SprocAccessor`1.#ctor(EntLibContrib.Data.IBM.DB2.iSeries.Db2Database,System.String,Microsoft.Practices.EnterpriseLibrary.Data.IRowMapper{`0})">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.SprocAccessor`1"/> that works for a specific <paramref name="database"/>
            and uses <paramref name="rowMapper"/> to convert the returned rows to clr type <typeparamref name="TResult"/>.
            </summary>
            <param name="database">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.Database"/> used to execute the Transact-SQL.</param>
            <param name="procedureName">The stored procedure that will be executed.</param>
            <param name="rowMapper">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.IRowMapper`1"/> that will be used to convert the returned data to clr type <typeparamref name="TResult"/>.</param>
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Db2SprocAccessor`1.#ctor(EntLibContrib.Data.IBM.DB2.iSeries.Db2Database,System.String,Microsoft.Practices.EnterpriseLibrary.Data.IResultSetMapper{`0})">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.SprocAccessor`1"/> that works for a specific <paramref name="database"/>
            and uses <paramref name="resultSetMapper"/> to convert the returned set to an enumerable of clr type <typeparamref name="TResult"/>.
            </summary>
            <param name="database">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.Database"/> used to execute the Transact-SQL.</param>
            <param name="procedureName">The stored procedure that will be executed.</param>
            <param name="resultSetMapper">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.IResultSetMapper`1"/> that will be used to convert the returned set to an enumerable of clr type <typeparamref name="TResult"/>.</param>
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Db2SprocAccessor`1.#ctor(EntLibContrib.Data.IBM.DB2.iSeries.Db2Database,System.String,Microsoft.Practices.EnterpriseLibrary.Data.IParameterMapper,Microsoft.Practices.EnterpriseLibrary.Data.IRowMapper{`0})">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.SprocAccessor`1"/> that works for a specific <paramref name="database"/>
            and uses <paramref name="rowMapper"/> to convert the returned rows to clr type <typeparamref name="TResult"/>.
            The <paramref name="parameterMapper"/> will be used to interpret the parameters passed to the Execute method.
            </summary>
            <param name="database">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.Database"/> used to execute the Transact-SQL.</param>
            <param name="procedureName">The stored procedure that will be executed.</param>
            <param name="parameterMapper">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.IParameterMapper"/> that will be used to interpret the parameters passed to the Execute method.</param>
            <param name="rowMapper">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.IRowMapper`1"/> that will be used to convert the returned data to clr type <typeparamref name="TResult"/>.</param>
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Db2SprocAccessor`1.#ctor(EntLibContrib.Data.IBM.DB2.iSeries.Db2Database,System.String,Microsoft.Practices.EnterpriseLibrary.Data.IParameterMapper,Microsoft.Practices.EnterpriseLibrary.Data.IResultSetMapper{`0})">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.SprocAccessor`1"/> that works for a specific <paramref name="database"/>
            and uses <paramref name="resultSetMapper"/> to convert the returned set to an enumerable of clr type <typeparamref name="TResult"/>.
            The <paramref name="parameterMapper"/> will be used to interpret the parameters passed to the Execute method.
            </summary>
            <param name="database">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.Database"/> used to execute the Transact-SQL.</param>
            <param name="procedureName">The stored procedure that will be executed.</param>
            <param name="parameterMapper">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.IParameterMapper"/> that will be used to interpret the parameters passed to the Execute method.</param>
            <param name="resultSetMapper">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.IResultSetMapper`1"/> that will be used to convert the returned set to an enumerable of clr type <typeparamref name="TResult"/>.</param>
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Db2SprocAccessor`1.Execute(System.Object[])">
            <summary>
            Executes the stored procedure and returns an enumerable of <typeparamref name="TResult"/>.
            The enumerable returned by this method uses deferred loading to return the results.
            </summary>
            <param name="parameterValues">Values that will be interpret by an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.IParameterMapper"/> and function as parameters to the stored procedure.</param>
            <returns>An enumerable of <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="M:EntLibContrib.Data.IBM.DB2.iSeries.Db2SprocAccessor`1.BeginExecute(System.AsyncCallback,System.Object,System.Object[])">
            <summary>
            Begin executing the database object asynchronously, 
            returning a System.IAsyncResult object that can be used to retrieve the result set after the operation completes.
            </summary>
            <param name="callback">Callback to execute when the operation's results are available. May be null if you don't wish to use a callback.</param>
            <param name="state">Extra information that will be passed to the callback. May be null.</param>
            <param name="parameterValues">Parameters to pass to the database.</param>
            <returns></returns>
        </member>
    </members>
</doc>
